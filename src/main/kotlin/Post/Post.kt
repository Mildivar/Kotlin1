package Post

import Post.attachments.Attachments

data class Post(
    var id: Int,
    val ownerId: Int = 0,
    val fromId: Int = 0,        // идентификатор автора записи (от чьего имени опубликована запись).
    val createBy: Int = 0,      // идентификатор администратора, который опубликовал запись (возвращается
    // только для сообществ при запросе с ключом доступа администратора). Возвращается в записях,
    // опубликованных менее 24 часов назад.
    val date: String = "",      // время публикации записи в формате unixtime
    val text: String = "",       // текст записи
    val replyOwnerId: Int = 0,      // идентификатор владельца записи, в ответ на которую была оставлена текущая.
    val replyPostId: Int = 0,       // идентификатор записи, в ответ на которую была оставлена текущая.
    val friendsOnly: Boolean = false,       //  если запись была создана с опцией «Только для друзей».
    val comments: Comments = Comments(),        // информация о комментариях к записи, объект с полями
    val copyright: Copyright = Copyright(),     // источник материала, объект с полями
    val likes: Likes = Likes(),      // информация о лайках к записи, объект с полями
    val reposts: Reposts = Reposts(),       // информация о репостах записи («Рассказать друзьям»), объект с полями
    val views: Views = Views(),     // Информация о просмотрах записи. Объект с единственным полем
    val postType: String = "",       //тип записи, может принимать следующие значения: post, copy, reply, postpone, suggest.
    val postSource: PostSource = PostSource(),   //Поле возвращается только для Standalone-приложений с ключом доступа, полученным в Implicit Flow.
    // 	Информация о способе размещения записи. Описание объекта находится на отдельной странице.
    val attachments: Array<Attachments>? = null,
    val geo: Geo = Geo(),    //Информация о местоположении , содержит поля
    val signerId: Int = 0,    //Идентификатор автора, если запись была опубликована от имени сообщества и подписана пользователем;
    val copyHistory: Reposts? = null, // ARRAY!!!! Массив, содержащий историю репостов для записи. Возвращается только в том случае,
    // если запись является репостом. Каждый из объектов массива, в свою очередь,
    // является объектом-записью стандартного формата.
    val canPin: Boolean = true,        //информация о том, может ли текущий пользователь закрепить запись (1 — может, 0 — не может).
    val canDelete: Boolean = true,     //информация о том, может ли текущий пользователь удалить запись (1 — может, 0 — не может).
    val canEdit: Boolean = true,       //информация о том, может ли текущий пользователь редактировать запись (1 — может, 0 — не может).
    val isPinned: Int = 0,      //информация о том, что запись закреплена.
    val markedAsAds: Boolean = false,        //информация о том, содержит ли запись отметку "реклама" (1 — да, 0 — нет).
    val isFavorite: Boolean = false,        //если объект добавлен в закладки у текущего пользователя.
    val donut: Donut = Donut(),     //информация о записи VK Donut:
    val postponedId: Int = 0,      //Идентификатор отложенной записи. Это поле возвращается тогда, когда запись стояла на таймере.
)
